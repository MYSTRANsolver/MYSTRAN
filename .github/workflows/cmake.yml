name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    #python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3

      # ${{ matrix.python-version }}
    #- name: Set up Python 3.10
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: 3.10

    - name: Symlink to gfortran (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo ln -fs /usr/bin/gfortran-10 /usr/local/bin/gfortran
        sudo ln -fs /usr/bin/gcc-10 /usr/local/bin/gcc
        sudo ln -fs /usr/bin/g++-10 /usr/local/bin/g++

    - name: print
      run: |
        echo ${{github.workspace}}
        ls
        pwd
    #- name: install 
      #run: echo ${{github.workspace}}

    - name: Configure CMake "Unix Makefiles" .
      run: |
        cmake "Unix Makefiles" .
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    #- name: Run CMake
    #  # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #  # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #  run: cmake -G ${{github.workspace}} .

    - name: Build
      # Build your program with the given configuration
      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      run: make -j2
      #run: mingw -j8
      
    - name: Test
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: | #ctest -C ${{env.BUILD_TYPE}}
        Binaries/mystran Build_Test_Cases/statics/BAR-I12.DAT
        Binaries/mystran Build_Test_Cases/statics/bar_dumpall.bdf
        Binaries/mystran Build_Test_Cases/statics/cshear.bdf

